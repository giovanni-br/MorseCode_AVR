.include m328Pdef.inc
.org 0x0000
rjmp config
.org 0x0002
rjmp mensagem


config:
ldi	R16,low(RAMEND)
out	SPL,R16
ldi	R16,high(RAMEND)
out	SPH,R16
call config_entrada
call config_saida
call config_timer
call config_int
rjmp wait_inf


wait_inf:
nop
rjmp	wait_inf


mensagem:
sbis PIND, 7;
rjmp sos
sbis PIND, 6
rjmp loveu
sbis PIND, 5;
rjmp enfi
sbis PIND, 4;
rjmp nota10
rjmp mensagem ; não temos mais mensagens para testar outro pino

sos:
;s;
call ponto;
call espaco_msm_letra
call ponto;
call espaco_msm_letra
call ponto;
call espaco_letra
;o;
call linha;
call espaco_msm_letra
call linha;
call espaco_msm_letra
call linha;
call espaco_letra
;s;
call ponto;
call espaco_msm_letra
call ponto;
call espaco_msm_letra
call ponto;
cli
rjmp config;na para o inicio

;--------------------loveu
loveu:
;l;
call ponto;
call espaco_msm_letra
call linha
call espaco_msm_letra
call ponto
call espaco_msm_letra
call ponto
call espaco_letra
;o;
call linha;
call espaco_msm_letra
call linha;
call espaco_msm_letra
call linha;
call espaco_msm_letra
call espaco_letra
;v;
call ponto
call espaco_msm_letra
call ponto
call espaco_msm_letra
call ponto;
call espaco_msm_letra
call linha
call espaco_letra
;e;
call ponto
call espaco_palavra
;u;
call ponto
call espaco_msm_letra
call ponto;
call espaco_msm_letra
call linha
cli
rjmp config;

;---------- Enfi
enfi:
;e;
call ponto
call espaco_letra
;n;
call linha
call espaco_msm_letra
call ponto
call espaco_letra
;f;
call ponto
call espaco_msm_letra
call ponto;
call espaco_msm_letra
call linha
call espaco_msm_letra
call ponto
call espaco_letra
;i;
call ponto
call espaco_msm_letra
call ponto
cli
rjmp config;

;---------- Nota 10
nota10:
;n;
call linha
call espaco_msm_letra
call ponto
call espaco_letra
;o;
call linha;
call espaco_msm_letra
call linha;
call espaco_msm_letra
call linha;
call espaco_msm_letra
call espaco_letra
;t;
call linha
call espaco_msm_letra
;a;
call ponto
call espaco_msm_letra
call linha
call espaco_palavra
;1;
call ponto
call espaco_msm_letra
call linha
call espaco_msm_letra
call linha
call espaco_msm_letra
call linha
call espaco_msm_letra
call linha
call espaco_msm_letra
;0;
call linha
call espaco_msm_letra
call linha
call espaco_msm_letra
call linha
call espaco_msm_letra
call linha
call espaco_msm_letra
call linha
call espaco_msm_letra
cli
rjmp config;



ponto:;1 unidade up
ldi R30, 0x1E
ldi R31, 0x85
call saida;
sts OCR1BH,R30
sts OCR1BL,R31
call reset_timer
ret

linha:;3 unidade up
ldi R28, 0x5B
ldi R29, 0x95
call saida;
sts OCR1BH,R28
sts OCR1BL,R29
call reset_timer
ret

espaco_msm_letra:;1 unidade down
clr R16
out PORTB, R16
ldi R30, 0x1E
ldi R31, 0x85
sts OCR1BH,R30
sts OCR1BL,R3
call reset_timer
ret

espaco_letra:; 3 unidades down
clr R16
out PORTB, R16
ldi R28, 0x5B
ldi R29, 0x95
sts OCR1BH,R28
sts OCR1BL,R29
call reset_timer
ret

espaco_palavra:;7 unidades down
clr R16
out PORTB, R16
ldi R26, 0xD5
ldi R27, 0x9F
sts OCR1BH,R26
sts OCR1BL,R27
call reset_timer
ret

reset_timer:
ldi    R16,0x00
sts   TCNT1L,R16
sts   TCNT1H,R16
ret

saida:
ldi R16, 0b11_00_00_00;
out PORTB, R16;
ret

config_int:  ;config interrupt em INT0 (PD2) e em PCINT13 (PC5)
ldi	R16,0b00000010
sts	EICRA,R16  ;descida
ldi	R16,0b00000001
out	EIMSK,R16	;Ativa interrupt INT0
ldi R16, (1<<PCIE2); Accionar a porta D como PCINT23..16
sts PCICR, R16;
ldi R16, (1<<PCINT2); configurando o pino D2 como INT0
sts PCMSK2, R16;
sei; seta global interupt
ret



config_entrada:
clr R16;
out DDRD, R16;
ser R16
out PORTD, R16;
ret

config_saida:
ser R16;
out DDRB, R16; possivel problema de estado lógico
clr R16;
out PORTB, R16;
ret

config_timer:
ldi	R16,0x00; modo normal,
sts TCCR1A, R16
ldi R16,0b00_0_00_101; 1024 pre scaler
sts TCCR1B,R16
ret
